#!/bin/bash


#=====-declare=====#
for i in $(seq 0 5)
do
    At[i]=$(grep -Po "(?<=day $i:).+" $HOME/.logitime/.ltconfig)
done
log=$HOME/.logitime/log
list=$HOME/.logitime/list
tmp_=$HOME/.logitime/.tmp_
tmp=$HOME/.logitime/.tmp
#=====read=====#

cnt=0;j=0;i=1;Ju=1
if [ "$(echo $1|grep -|grep h)" != ""  ];then
    printf "usage: ltcalcul [-m] [-d[0][levelnumbber]]\n"
else
    while read a b c d
    do
	if [[ $a != [0-5] ]];then	
	    cnt=$((cnt + 1))
	    tmp[$cnt]=$a
	    Ju=1
	    if [[ $cnt != 1 ]];then	    
		for k in $(seq 1 $((cnt-1)))
		do
		    if [[ ${tmp[$k]} == $a ]];then
			Ju=$((Ju*0))
		    else
			Ju=$((Ju*1))
		    fi
		done
	    fi
	    if [[ $Ju = 1 ]] ;then
		Sub[$i]=$a
		i=$((i+1))
	    fi
	    let S_$a[$j-1]=$((S_$a[j-1]+c-b))
	    let Tols[$j-1]=$((Tols[j-1]+c-b))
	    let C_$a[$j-1]=$((C_$a[j-1]+1))
	    #-------output-----#
	    printf "$((6+b/6)):$((b%6))0-$((6+c/6)):$((c%6))0\t$(((c-b)/6)):$(((c-b)%6))0\t[$((j-1))]$a\n"
	    if [[ $(echo $1|grep -|grep -o m) != "" ]];then
		echo \ \ Notes: $d
	    fi	
	else
	    echo =========
	    printf "\tDay:$a\n"
	    j=$(($j + 1))
	fi	  		
    done < $log
    
    #------comment-------#
    echo \ 
    echo ======================
    for k in ${Tols[@]};do TolS=$((TolS+k));done
    for k in $(seq 0 $((j-1)))
    do
	AT=$((AT+At[$k]))
	printf "[$k] Total Duration: $((Tols[k]/6)):$((Tols[k]%6))0/$((At[k]/6)):$((At[k]%6))0\tOccupy: $((Tols[k]*100/At[k]))%%\n"
    done
    printf "    Total ALL: $((TolS/6)):$((TolS%6))0/$((AT/6)):$((AT%6))0\tmean: $((TolS*100/AT))%%\n"
    
    if [[  $(echo $1|grep -|grep -Po d) != "" ]];then
	rm -f $tmp 
	echo ----------------------
	for k in ${Sub[@]}
	do
	    [ "$(echo $1|grep -|grep -Po [0-9])" = "" ] && echo $k:
	    for l in $(seq 0 $((j-1)))
	    do
		let As_$k=$((As_$k+S_$k[l]))
		let Ac_$k=$((Ac_$k+C_$k[l]))
		[ "$(echo $1|grep -|grep -Po [0-9])" = "" ] && printf "  [$l] $((S_$k[l]/6)):$((S_$k[l]%6))0\t"
	    done
	    t="$((As_$k/6)):$((As_$k%6))0"
	    o="$((As_$k*100/AT)).$(((As_$k*1000/AT)%10))%%"
	    a="$(((As_$k/Ac_$k)/6)):$(((As_$k/Ac_$k)%6))0"	 
	    ta=$((As_$k))
	    echo "$k $ta" >> $tmp 
	    [ "$(echo $1|grep -|grep -Po [0-9])" = "" ] && printf "\n  Total: $t\tOccupy: $o\n  Aver-duration: $a\n"
	done
	if [ "$(echo $1|grep -|grep -Po 0)" != "" ];then
	    for k in $(grep -Po '.+(?= 0000000000)' $list)
	    do
		sum=0	    
		for x in $(grep $k $tmp "$tmp"_T|grep -Po "(?<= ).+")
		do
		    sum=$((x+sum))
		done
		ta=$((As_$k))
		t_=$(grep -Po  "(?<= $k ).+" "$tmp_"T)
		echo "$sum $k $((t_+ta))" >> $tmp_   
	    done
	    mv $tmp_ $tmp 
	    echo "__ $(date) __" >> $tmp 
	echo \ Calculate for TO-DOs done.
	else
	    q=$((2*($(echo $1|grep -Po '(?<=-d).+')-1)))
	    for k in ${Sub[@]}
	    do
		if [ "$(echo $k|grep -o _|wc -c)" = "$q" ];then
		    echo $k:
		    sum=0
		    for x in $(grep $k $tmp|grep -Po "(?<= ).+")
		    do
			sum=$((x+sum))
		    done
		    for l in $(seq 0 $((j-1)))
		    do
			sums=0
			for p in ${Sub[@]}
			do
			    if [ "$(echo $p|grep -o $k)" != ""  ];then
				sums=$((S_$p[l]+sums))
			    fi			
			done
			printf "  [$l] $((sums/6)):$((sums%6))0\t"
		    done
		    cq="$(grep -c $k $log)"
		    tq="$((sum/6)):$((sum%6))0"
		    oq="$((sum*100/AT)).$(((sum*1000/AT)%10))%%"
		    aq="$(((sum/cq)/6)):$(((sum/cq)%6))0"	 
		    printf "\n  Total: $tq\tOccupy: $oq\n  Aver-duration: $aq\n"
		fi
	    done
	fi    
    fi
fi


    



