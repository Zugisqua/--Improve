#!/bin/bash



log=$HOME/.logitime/log
list="$(cat $HOME/.logitime/list)"
List=$HOME/.logitime/list
tmp_=$HOME/.logitime/.tmp_
tmp=$HOME/.logitime/tmp
#=====================

if [ "$(echo $1|grep -o -)" = '-' ];then
    if [ "$(echo $1|grep -o u)" = 'u' ];then
	_Li="$(echo "$list"|grep -P '( U | Z | E )')"
	echo "$list"|grep ' _ ' > $List
	echo "$_Li"|\
	    awk '
	    function dat(ate,ret){
	    	     "date -d "ate" +%s"|getline _a
	    	     "date -d $(date +%F) +%s"|getline _b
		     _c=int(ret+(_b-_a)/86400)
		     "date +%F"|getline _d
		     return _c" "_d}
	    {print $1" "$2" "$3" "dat($5,$4)" "$6" "$7" "$8" "$9" "$10" "$11" "$12}' >> $List
	echo " Up-to-dated."	
    fi
    if [  "$(echo $1|grep -o l)" = 'l' ];then
	if [ "$(echo $1|grep -o 0)" != ""  ];then
	    _a="$(echo "$list"|\
	    	       grep -P '( U | Z | E )'|\
		       awk '{print $1}')"
	    Sub="$_a"
	    while [ "$_a" != "" ]
	    do
		_a="$(echo "$_a"|grep -Po '.+(?=_)')"
		Sub="$(printf "$Sub\n$_a"|sort -fuk1)"
	    done
	    for i in $Sub
	    do
		_l="$(printf "$(echo "$list"|grep "$i ")\n$_l")"
	    done
	    list="$_l"
	fi
	echo "$list"|\
		   grep "$2"|\
		   sort -fuk1|\
		   awk '
		   function col(head){
		   	    if ($3=="U")
		    	       return "\033[32m"head"\033[37m"
		 	    if ($3=="E")
			       return "\033[33m"head"\033[37m"
			    if ($3=="Z")
			       return "\033[34m"head"\033[37m"
			    if ($3=="_")
		    	       return head
		   }
		   function tre(da,re,head){
		   	    "echo "head"|grep -o _|wc -c "|getline _a
			    if (_a==0){printf "\n"}
 			    printf "["da"]:" re  "\t"
			    if (_a!=0)
			       {for (i=2;i<_a;i++)
			       	   printf "  "
			       temp="└── "}
			    else
				temp=""
		   	    return temp col(head)
		   }
		   {printf tre($5,$4,$1)"\n"}'
    elif [  "$(echo $1|grep -o a)" = 'a' ];then
	while read a b c d e
	do    
	    printf "$a[$c]=$d\t $e\n"
	done <<< "$list"
    elif [ "$(echo $1|grep -o x)" = 'x'  ];then
	read -p "InPut: " a b
	if [[  $b != ""  ]];then
	    printf "$a 0000000000 U 0 $(date '+%F') $b\n" >> $List
	    printf " Build.\n"
	else
	    echo " Invalid! try again."
	fi
    elif [ "$(echo $1|grep -o f)" = 'f' ];then	
	if [[  "$(echo $1|grep -o f)" = 'f' &&  "$(echo $1|grep -o 0)" != "" ]];then
	    sed  "s#$2 0000000000 _#$2 0000000000 U#g" $List > $tmp_
	elif [[ "$3" = "E" || "$3" = "U" || "$3" = "Z" || "$3" = "_" ]];then
	    sed  "s#$2 0000000000 .#$2 0000000000 $3#g" $List > $tmp_
	elif [ "$3" = "" ];then
	    sed  "s#$2 0000000000 .#$2 0000000000 _#g" $List > $tmp_
	fi
	if [[ $(diff $tmp_ $List) && "$2" != "" ]] ;then
	    printf " $2 status changed.\n"
	    mv $tmp_ $List
	else
	    printf " No such TO-DO or Mark wrong.\n"
	fi
#    elif [[ "$(echo $1|grep -|grep -o h)" != "" ]];then
#	printf "usage: ltodo [-u] [-l[1[0][2]]] [-a] [-x] [-f]\n"
    fi
elif [[ "$1" = "" || "$1" = 'more' ]];then
    echo ==$(date)----
    echo ""
    echo "$list" |\
	grep -P "$(date '+%F')"|\
	sort -fuk3|\
	awk '
	function col(head){
		 if ($3=="U")
		    return "\033[32m"head"\033[37m"
		 if ($3=="E")
		    return "\033[33m"head"\033[37m"
		 if ($3=="Z")
		    return "\033[34m"head"\033[37m"
		 if ($3=="_")
		    return "\033[30m"head"\033[37m"
		 }
	{printf ""$4"-["col($1)"]\t"$6"\n"}'
    echo ""
else
    printf "usage: ltodo [more] [-u] [-l[1[0][2]]] [-a] [-x] [-f[0]]\n"
fi
