#!/bin/bash



log=$HOME/.logitime/log
list=$HOME/.logitime/list
tmp_=$HOME/.logitime/.tmp_
tmp=$HOME/.logitime/.tmp
#=====================

if [ "$(echo $1|grep -o -)" = '-' ];then
    if [ "$(echo $1|grep -o u)" = 'u' ];then
	while read a b c d e f
	do
	    [  "$(grep -c "$a" "$list")" != '1' ] && b_=_ || b_=$c
	    if [[ "$(echo $c|grep -o U)" != 'U' || "$e" = "$(date '+%F')" || "$(grep -c "$a" $list)" != '1'   ]];then
		printf "$a 0000000000 $b_ $d $e $f\n" >> $tmp_
	    fi
	done <$list
	while read a b c d e f
	do	    
	    if [[ "$(echo $c|grep -o U)" = 'U' && "$e" != "$(date  '+%F')" &&  "$(grep -c "$a" $list)" = '1'  ]];then
		d_=$((d+($(date -d "$(date +%F)" +%s)-$(date -d "$e" +%s))/86400))
		printf "$a 0000000000 $c $d_ $(date '+%F') $f\n" >> $tmp_
	    fi
	done <$list	
	mv $tmp_ $list
	echo " Up-to-dated."	
    fi
    if [  "$(echo $1|grep -o l)" = 'l' ];then
	if [ "$2" != "" ];then
	    grep -P "$2" "$list" > $tmp_
	    sort -fuk1 $tmp_ --output=$tmp_
	else
	    sort -fuk1 $list > $tmp_
	fi
	while read a b c d e f
	do	
	    if [ "$(echo $1|grep -o 0)" = '0' ];then
		[[ "$d" = 0 || "$(echo $c|grep -o U)" = ""  ]] && d_=$d || d_="\033[33m$d\033[37m"
		printf "[$e]-$d_\t"
	    elif [ "$(echo $1|grep -o 2)" != "" ];then
		t_=$(grep -Po  "(?<= $a ).+" $tmp )
		_t=$(grep -Po  ".+(?= $a )" $tmp )
		T_=$((t_/6)):$((t_%6))0
		_T=$((_t/6)):$((_t%6))0
		printf "[ \033[36m$_T\033[37m ]-$d\t"
	    fi	    
	    for i in $(seq 1 $(($(echo $a|grep -o _|wc -c)/2-1)))
	    do
		printf "    "
	    done
	    [ "$(echo $a|grep -o _)" != "" ] && printf "└── "
	    [[ "$(echo $c|grep -o U)" != "" &&  "$(grep -c "$a" "$list")" = '1' ]] && printf "\033[32m"
	    if [ "$(echo $1|grep -o 1)" = '1' ];then
    		_i=$a	    
		while [[ "$(echo $_i|grep -Po "(?<=_).+")" != "" ]]
		do
		    _i=$(echo $_i|grep -Po "(?<=_).+")
		done
		printf "$_i"
	    else	
		printf "$a"		    
	    fi
	    printf "\033[37m"
	    [  "$(echo $1|grep -o 2)" != ""  ] &&  printf " - (\033[35m$T_\033[37m)\n" || printf "\n"
	done < $tmp_
	[  "$(echo $1|grep -o 2)" != ""  ] && printf "$(grep -Po '(?<=__).+(?=__)' $tmp ) Updated\n"
	rm $tmp_
    elif [  "$(echo $1|grep -o a)" = 'a' ];then
	while read a b c d e
	do    
	    printf "$a[$c]=$d\t $e\n"
	done < $list
    elif [ "$(echo $1|grep -o x)" = 'x'  ];then
	read -p "InPut: " a b
	if [[  $b != ""  ]];then
	    printf "$a 0000000000 U 0 $(date '+%F') $b\n" >> $list
	    printf " Build.\n"
	else
	    echo " Invalid! try again."
	fi
    elif [ "$(echo $1|grep -o f)" = 'f' ];then	
	sed  "s#$2 0000000000 U#$2 0000000000 _#g" $list > $tmp_
	if [[ $(diff $tmp_ $list) && "$2" != "" ]] ;then
	    printf " $2 have marked as finished.\n"
	    mv $tmp_ $list
	else
	    printf " No such TO-DO.\n"
	fi
    elif [[ "$(echo $1|grep -|grep -o h)" != "" ]];then
	printf "usage: ltodo [-u] [-l[1[0][2]]] [-a] [-x] [-f]\n"
    fi
elif [ "$1" = ""  ];then
    echo ==$(date)----
    echo ""
    grep U $list|grep -P "$(date '+%F')" > $tmp_
    while read a b c d e f g
    do
	if [[ "$(grep -c "$a" $list)" = '1' && "$(echo $c|grep -o U)" != "" ]];then	    
	    if [ "$1" = "" ];then
		printf "\033[33m$d\033[37m-[\033[32m$a\033[37m] $f\n"
	    elif [ "$1" = "more"  ];then
		printf "\033[33m$d\033[37m-[\033[32m$a\033[37m] $f\n\t$g\n"
	    fi
	fi
    done < $tmp_
    rm $tmp_
    echo ""
else
    printf "usage: ltodo [-u] [-l[1[0][2]]] [-a] [-x] [-f]\n"
fi
