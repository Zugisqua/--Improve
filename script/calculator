#!/bin/bash


#=====-declare=====#
for i in $(seq 0 6)
do
    At[i]=$(grep -Po "(?<=day $i:).+" $HOME/.logitime/.ltconfig)
done
log=$HOME/.logitime/log
list=$HOME/.logitime/list
tmp_=$HOME/.logitime/.tmp_
tmp=$HOME/.logitime/tmp

function tme(){
    echo -n "$((6+$1/6)):$(($1%6))0"
}
function itv(){
    echo -n "$(($1/6)):$(($1%6))0"
}
#==========#
Dat=$(grep -Po "(?<=:).+" $log|\
	  awk '{print $1" "$3-$2}')
Sub=$(grep -Po "(?<=:).+" $log|\
	  awk '{print $1}'|\
	  sort -fuk1)
Mai=$(echo "$Sub"|\
	  awk -F "_" '{print $1}'|\
	  sort -fuk1)
#==========#

for i in $(seq 0 6)
do
    dat[i]=$(grep -Po "(?<=$i:).+" $log|\
	 awk '{print $1" "$3-$2}')
    _a=$(grep -Po "$i:.+" $log)
    if [[  "$_a" != "" && "$(echo $1|grep -|grep t)" = "" ]];then
	echo 
	echo -e "DAY:$i"
	echo "$_a"|awk '
	function time(num){
		 return 6+int(num/6)":"num%6"0"
		 }
	function inter(num){
		 return int(num/6)":"num%6"0"
	       	 }
	{
	printf " "time($2)"--"time($3)"\t"inter($3-$2)"\t"$1"\n" 
	}'
    fi
done
cat <<EOF

---------------------------------
EOF
if [[ "$(echo $1|grep -|grep t)" = "" ]];then
    j=1
    for i in $Mai
    do
	_a=$(echo "$Dat"|grep "$i"|awk '{sum+=$2}END{print sum}')
	printf " $i-Duaration: $(itv $_a)\t"
	[[ "$((j%2))" = 0 ]] && echo " "
	j=$[j+1]
    done
    echo  ""

cat <<EOF
=================================
EOF
fi
if [[ "$(echo $1|grep -|grep t)" = "" ]];then
    for i in $(seq 0 6)
    do
	_a=$(echo "${dat[i]}"|awk '{sum+=$2}END{print sum}')
	printf "[$i]\tTotal-Dua: $(itv $_a)/$(itv ${At[i]})\tPer: $((100*$_a/${At[i]}))%% \n"
	AT=$((AT+At[i]))
    done
    _a=$(echo "$Dat"|\
	     awk '{sum+=$2}END{print sum}')
    printf "[ ]\tTotal-All: $(itv $_a)/$(itv $AT)\tPer: $((100*$_a/$AT))%%\n"

cat <<EOF

---------------------------------
EOF
fi
if [ "$1" != "" ] ;then
    ta="$Sub"
    sub="$Sub"
    while [ "$ta" != "" ]
    do
	ta="$(echo "$ta"|grep -Po '.+(?=_)')"
	Sub="$(printf "$Sub\n$ta"|sort -fuk1)"
    done
    for i in $Sub
    do
	Al=$(echo "$Dat"|\
		 grep -P "$i"|\
	     awk '{sum+=$2}END{print sum}')
	Sai="$(printf "$Al $i $(echo "$Dat"|\
    		 	      grep -P "$i "|\
		 	      	      awk '{sum+=$2}END{print sum}')\n$Sai"|\
			      	      sort -fuk2)"
    done
    if [ "$(echo $1|grep -|grep t)" != "" ];then
	Lis="$(cat $list|\
		  awk '{print $1}'|\
		  sort -fuk1)"
	for i in $Lis
	do	    
	    Alt="$(printf "$(($(printf "$Sai\n$(cat "$tmp_"T)"|\
	    		  grep " $i "|\
			  awk '{sum+=$1}END{printf sum}'))) $i $(printf "$Sai\n$(cat "$tmp_"T)"|\
			      			   grep " $i "|\
						   awk '{sum+=$3}END{print sum}')\n$Alt"|sort -fuk2)"
	done
	_par=$(($(echo $1|grep -Po '(?<=-t).+')))
	if [ "$_par" != "0" ];then
	    _a="$Lis"
	    for i in $(seq 1 $_par)
	    do
		_a="$(echo "$_a"|\
			   grep -Po '.+(?=_)'|\
			   sort -fuk1)"
	    done
	    for i in $_a
	    do
		Lat="$(printf "$(echo "$Alt"|grep " $i ")\n$Lat")"
	    done
	    Lat=$(echo "$Lat"|sort -fuk2)
	else
	    Lat="$Alt"
	fi
	echo "$Lat"|grep "$2"|\
	    awk '
		   function inter(num){
		   	    return int(num/6)":"num%6"0"
	       	   }
		   function inte(num){
	    	   	    if (num>0)
		    	    {return int(num/6)":"num%6"0"}
		   }	       	 
                   function tre(da,re,head){
                            "echo "head"|grep -o _|wc -c "|getline _a
                            if (_a==0){printf "\n"}
                            printf "["da"]" "  \t"
                            if (_a!=0)
                               {for (i=2;i<_a;i++)
                                   printf "  "
                               temp="└── "}
                            else
                                temp=""
                            return temp head"    "re
                   }
                   {printf tre("\033[36m"inter($1)"\033[37m","\033[35m"inte($3)"\033[37m",$2)"\n"}'

    elif [ "$2" = "note" ];then
	grep "$1" $log --color=always|\
	    awk '{print $1"  "$4" "$5" "$6" "$7" "$8" "$9" "$10}'
    else
	echo "$Sai"|grep $1|\
	    awk '
	    function inter(num){
	    	 if (num>0)
		    {return int(num/6)":"num%6"0"}
	       	 }
	    {print "[\033[36m"inter($1)"\033[37m]  \t"$2"   \t\033[35m"inter($3)"\033[37m"}'
	    
cat <<EOF

---------------------------------
EOF
    fi
fi
